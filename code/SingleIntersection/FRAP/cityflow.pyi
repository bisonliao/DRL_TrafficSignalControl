# cityflow.pyi

class Engine:
    def __init__(self, config_file: str, thread_num: int = 1): ...
    
    def next_step(self) -> None: ...
    def get_current_time(self) -> int: ...
    
    def get_vehicles(self, include_waiting: bool = False) -> list[str]: ...
    def get_vehicle_info(self, vehicle_id: str) -> dict: ...
    
    def get_lane_vehicle_count(self, lane_id: str) -> int: ...
    def get_lane_waiting_vehicle_count(self, lane_id: str) -> int: ...
    def get_lane_vehicles(self, lane_id: str) -> list[str]: ...
    
    def get_roadnet(self) -> dict: ...
    
    def get_tl_phase(self, intersection_id: str) -> int: ...
    def set_tl_phase(self, intersection_id: str, phase: int) -> None: ...
    
    def get_vehicle_speed(self, vehicle_id: str) -> float: ...
    def get_vehicle_distance(self, vehicle_id: str) -> float: ...
    def get_vehicle_route(self, vehicle_id: str) -> list[str]: ...

    def get_average_travel_time()->float: ...
    
